<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.qidian.mall</groupId>
        <artifactId>user-center</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>user-center-business</artifactId>
    <name>user-center-business</name>
    <description>用户中心业务子模块</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.qidian.mall</groupId>
            <artifactId>user-center-client</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!--文件服务-->
        <dependency>
            <groupId>com.qidian.mall</groupId>
            <artifactId>file-client</artifactId>
        </dependency>
        <!--消息服务-->
        <dependency>
            <groupId>com.qidian.mall</groupId>
            <artifactId>message-client</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.code.kaptcha/kaptcha -->
<!--        <dependency>-->
<!--            <groupId>com.google.code.kaptcha</groupId>-->
<!--            <artifactId>kaptcha</artifactId>-->
<!--            <version>2.3</version>-->
<!--        </dependency>-->
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--打包时候，不加下面的配置，执行会报错 没有主清单属性-->
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!--这个是默认 goal，在 mvn package 执行之后，这个命令再次打包生成可执行的 jar，
                            同时将 mvn package jps生成的 jar 重命名为 *.origin；-->
                            <goal>repackage</goal>
                        </goals>
                        <!--指定这个会生成一个exec的jar 可执行，另外的jar不能执行，只能被依赖-->
                        <!--                   <configuration>-->
                        <!--                      <classifier>exec</classifier>-->
                        <!--                    </configuration>-->
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
