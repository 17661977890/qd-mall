<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.qidian.mall</groupId>
    <artifactId>qd-mall</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>qd-mall</name>
    <!--父级pom打包类型都是pom，默认jar-->
    <packaging>pom</packaging>
    <description>奇点商城项目</description>

    <!--maven 依赖统一版本管理-->
    <properties>
        <java.version>1.8</java.version>
        <commons-collections4.version>4.2</commons-collections4.version>
        <fastjson.version>1.2.54</fastjson.version>
        <swagger.version>2.9.2</swagger.version>
        <swagger.ui.version>1.8.7</swagger.ui.version>
        <swagger.mg.ui.version>1.0.6</swagger.mg.ui.version>
        <swagger.butler.version>1.2.0</swagger.butler.version>
        <jjwt.version>0.9.1</jjwt.version>
        <druid-starter>1.1.10</druid-starter>
        <jasypt.version>1.14</jasypt.version>
        <sharding-sphere.version>3.1.0</sharding-sphere.version>
        <security-oauth2.version>2.3.5.RELEASE</security-oauth2.version>
        <security-jwt.version>1.0.9.RELEASE</security-jwt.version>
        <redisson.version>3.9.1</redisson.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <hutool.version>4.3.1</hutool.version>
        <mybatis-plus-boot-starter.version>3.2.0</mybatis-plus-boot-starter.version>
        <mysql-connector-java.version>5.1.47</mysql-connector-java.version>
        <aliyun-sdk-oss>3.4.0</aliyun-sdk-oss>
        <qiniu-java-sdk>7.2.17</qiniu-java-sdk>
        <easypoi.version>4.0.0</easypoi.version>
        <spring-boot-admin.version>2.0.4</spring-boot-admin.version>
        <velocity.version>1.7</velocity.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <txlcn.version>5.0.2.RELEASE</txlcn.version>
        <platform-bom>Cairo-SR3</platform-bom>
        <!--springboot springcloudalibaba springcloud 版本关系要对应-->
        <spring-cloud-alibaba-dependencies.version>0.2.1.RELEASE</spring-cloud-alibaba-dependencies.version>
        <spring-boot-dependencies.version>2.0.8.RELEASE</spring-boot-dependencies.version>
        <spring-cloud-dependencies.version>Finchley.SR3</spring-cloud-dependencies.version>

        <spring-boot-maven-plugin.version>2.1.1.RELEASE</spring-boot-maven-plugin.version>
        <spring-boot-starter-data-redis.version>2.1.4.RELEASE</spring-boot-starter-data-redis.version>
        <httpclient.version>4.5.2</httpclient.version>
    </properties>

    <!--项目开发者列表-->
    <developers>
        <developer>
            <id>bin</id>
            <name>sunbin</name>
            <email>17661977890@163.com</email>
           <url/>
            <!--项目开发者在项目中扮演的角色，角色元素描述了各种角色-->
            <roles>
                <role>Project Manager</role>
                <role>Architect</role>
            </roles>
        </developer>
    </developers>

    <!--项目的其他贡献者列表-->
    <contributors>
        <!--项目的其他贡献者。参见developers/developer元素-->
        <contributor>
            <name/><email/><url/><organization/><organizationUrl/><roles/><timezone/><properties/>
        </contributor>
    </contributors>

    <!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。-->
    <licenses>
        <license>
            <!--license用于法律上的名称-->
            <name>Apache 2</name>
            <!--官方的license正文页面的URL-->
            <url>http://www.baidu.com/banseon/LICENSE-2.0.txt</url>
            <!--项目分发的主要方式：
              repo，可以从Maven库下载
              manual， 用户必须手动下载和安装依赖-->
            <distribution>repo</distribution>
            <!--关于license的补充信息-->
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <!--maven 聚合配置-->
    <modules>
        <!--奇点商城业务中心模块-->
        <module>qd-mall-business</module>
        <!--通用配置模块-->
        <module>qd-mall-commons</module>
        <!--代码生成-->
        <module>qd-mall-codegenerator</module>
        <module>qd-mall-uaa</module>
        <module>qd-mall-gateway</module>
        <module>qd-mall-fileserver</module>

    </modules>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <!--依赖使用范围：compile test provided 默认compile，并且有多级依赖传递可依赖性-->
            <scope>test</scope>
            <!--排除不需要的包-->
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-extension</artifactId>
        </dependency>

    </dependencies>

    <!--通过dependencyManagement元素来管理jar包的版本，让子项目中引用一个依赖而不用显示的列出版本号。
    Maven会沿着父子层次向上走，直到找到一个拥有dependencyManagement元素的项目，
    然后它就会使用在这个dependencyManagement元素中指定的版本号。-->
    <dependencyManagement>
        <dependencies>
            <!-- 自定义 通用配置依赖starter -->
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>qd-mall-base-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>qd-mall-db-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>qd-mall-swagger2-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>qd-mall-quartz-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>qd-mall-log-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>qd-mall-redis-config</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--业务客户端-->
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>user-center-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.qidian.mall</groupId>
                <artifactId>file-client</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!-- druid 官方 starter -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-starter}</version>
            </dependency>
            <!-- mybatis-plus start -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <!-- 加入spring security spring security oauth2的处理 -->
            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${security-oauth2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>${security-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot-starter-data-redis.version}</version>
            </dependency>
            <!-- 在Redis基础上的一个Java实用工具包 -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>${swagger.ui.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zyplayer</groupId>
                <artifactId>swagger-mg-ui</artifactId>
                <version>${swagger.mg.ui.version}</version>
            </dependency>
            <dependency>
                <groupId>com.didispace</groupId>
                <artifactId>swagger-butler-core</artifactId>
                <version>${swagger.butler.version}</version>
            </dependency>
            <!--httpclient http远程调用框架-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- kaptcha 验证码生成工具 -->
            <dependency>
                <groupId>com.github.axet</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>
            <!-- hutool java工具类库  -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- 阿里云OSS -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss}</version>
            </dependency>
            <!-- 七牛依赖 -->
            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId>
                <version>${qiniu-java-sdk}</version>
            </dependency>
            <!--   easypoi   -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easypoi.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-web</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-annotation</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-tm</artifactId>
                <version>${txlcn.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-tc</artifactId>
                <version>${txlcn.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-txmsg-netty</artifactId>
                <version>${txlcn.version}</version>
            </dependency>
            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
                <version>${sharding-sphere.version}</version>
            </dependency>
            <!--springboot父组件-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>${platform-bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--指定maven 编译版本 和 jdk版本，这个也可以在本地maven的settings.xml 配置-->
    <profiles>
        <profile>
            <id>jdk18</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <jdk>${java.version}</jdk>
            </activation>
            <properties>
                <maven.compiler.source>${java.version}</maven.compiler.source>
                <maven.compiler.target>${java.version}</maven.compiler.target>
                <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
            </properties>
        </profile>
    </profiles>

    <!--构建项目所需要的信息-->
    <build>
        <!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置-->
        <!--统一打包插件版本规范-->
        <pluginManagement>
            <!--插件列表-->
            <plugins>
                <!--springboot的打包插件：把当前项目里所有依赖包和当前项目的源码都打成一个JAR包，同时还会将没有依赖包的JAR包也打出来，以.original为后缀的的就是了-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- 指定源文件编译对应的jdk版本，和上边profile的作用相同，因为 maven3 maven-compiler-plugin默认是jdk 1.5 版本较低，编译会出错-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-compiler-plugin</artifactId>-->
            <!--                <version>2.3.2</version>-->
            <!--                <configuration>-->
            <!--                    <source>1.8</source>-->
            <!--                    <target>1.8</target>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
        </plugins>
    </build>

    <!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。-->
    <distributionManagement>
        <!--部署项目产生的构件到远程仓库需要的信息  这里nexus私服仓库的是在我的阿里云服务器搭建的 账号密码 admin sunbin123-->
        <repository>
            <!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素-->
<!--            <uniqueVersion/>-->
            <id>nexus-releases</id>
            <name>Nexus Release Repository</name>
            <url>http://47.103.18.65:8081/repository/maven-releases/</url>
        </repository>
        <!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素-->
        <snapshotRepository>
<!--            <uniqueVersion/>-->
            <id>nexus-snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://47.103.18.65:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!--配置代理仓库，作用：可以从私服下载jar  上边的配置只是本地部署到私服的配置，如果这个不配置，是不会走私服拉jar-->
    <!--也可以在本地maven的setting.xml配置，那样对本地所有项目起作用 全局性-->
    <!--配置前依赖拉取流程：项目 本地 官方远程仓库-->
    <!--配置后依赖拉取流程：项目 本地 私服  官方远程仓库-->
    <repositories>
        <repository>
            <id>nexus</id>
            <name>Nexus Repository</name>
            <url>http://47.103.18.65:8081/repository/maven-public/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <name>Nexus Plugin Repository</name>
            <url>http://47.103.18.65:8081/repository/maven-public/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

</project>
